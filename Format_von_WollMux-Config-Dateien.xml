<?xml version="1.0"?><api><query><normalized><n from="Format_von_WollMux-Config-Dateien" to="Format von WollMux-Config-Dateien" /></normalized><pages><page pageid="33" ns="0" title="Format von WollMux-Config-Dateien"><revisions><rev contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">=== Vorbemerkungen zum Dateiformat ===
WollMux-Konfigurationsdateien sind einfache Textdateien, deren Inhalt der unten beschriebenen Syntax folgt. Die Dateien müssen im Unicode Format UTF8 kodiert sein, da ansonsten Umlaute und andere besondere Zeichen verstümmelt werden. Da die meisten Texteditoren nicht automatisch erkennen können, ob UTF8-Format vorliegt, und auch beim Speichern nicht immer den selben Zeichensatz wie beim Lesen verwenden, empfiehlt es sich, sowohl beim Laden als auch beim Speichern darauf zu achten, immer explizit das Format anzugeben. Texteditoren, die das nicht gestatten, sollten für die Bearbeitung von WollMux-Config-Dateien nicht verwendet werden. Zu beachten ist außerdem, dass &quot;Unicode&quot; nicht gleichbedeutend mit &quot;UTF8&quot; ist. Zum Beispiel speichert Wordpad bei Auswahl von &quot;Unicode-Textdokument&quot; ''nicht'' im UTF8 Format.

=== Syntax ===
Alle Konfigurationsdateien des WollMux haben eine gemeinsame Syntax. Die zugrundeliegende Struktur ist eine Hierarchie von Schlüsseln und Werten. 

==== Schlüssel ====
Die Syntax für Schlüssel folgt den üblichen Regeln für Bezeichner, d.h. erlaubte Zeichen sind die Buchstaben a-z und A-Z, sowie Ziffern und der Unterstrich, wobei das erste Zeichen keine Ziffer sein darf. Groß-/Klein-Schreibung bei Schlüsseln muss beachtet werden. &quot;KEY&quot; und &quot;key&quot; sind 2 verschiedene Schlüssel.

==== Werte ====
Als Werte sind zur Zeit nur Strings erlaubt. Strings sind in Gänsefüßchen &quot;...&quot; oder Apostrophe '...' eingeschlossene Folgen beliebiger Zeichen. Die zusammengehörigen Gänsefüßchen/Apostrophe müssen beide in der selben Zeile stehen. Um Gänsefüßchen in einen von Gänsefüßchen umschlossenen String bzw. Apostrophe in einen von Apostrophen umschlossenen String einzubetten wird die in BASIC und Pascal übliche Doppelung verwendet. Die folgenden Beispiele ergeben beide einen String aus 3 Zeichen mit einem Gänsefüßchen in der Mitte:

 &quot;X&quot;&quot;Y&quot;
 'X&quot;Y'

Die folgenden Beispiel ergeben einen String aus 3 Zeichen mit Apostroph in der Mitte:

 'X&lt;nowiki&gt;''&lt;/nowiki&gt;Y'
 &quot;X'Y&quot;

===== Zeilenumbrüche und das Sonderzeichen % =====
Zeilenumbrüche innerhalb von Strings (d.h. schließendes Anführungszeichen/Apostroph nicht in der selben Zeile wie öffnendes) sind nicht zugelassen. Das Einbetten von Zeilenumbrüchen innerhalb von Werten ist mit der Spezialsequenz &quot;%n&quot; möglich. Um das %-Zeichen einzubetten wird es gedoppelt. Ein beliebiges Unicode-Zeichen kann mit der Syntax &quot;%uABCD&quot; eingebettet werden, wobei ABCD die Hexnummer des Unicodes des Zeichens ist (immer 4-stellig).

==== Schlüssel-Wert-Paare ====
Ein elementares Konstrukt in WollMux-Config-Dateien sind Paare aus einem Schlüssel gefolgt von einem Wert, z.B.
 NAME &quot;WollMux&quot;

==== Verschachtelungen ====
Um die Daten hierarchisch zu organisieren können sie verschachtelt sein. Ein Verschachtelung beginnt mit einem Schlüssel und wird gefolgt von den diesem Schlüssel untergeordneten Inhalten in runden Klammern. Beispiel:
 GUI
 (
   Dialoge
   (
     Dialog1(...)
     Dialog2(...)
     ...
   )
 )

==== Gruppen ====
Gruppen sind Verschachtelungen ohne einen vorausgehenden Schlüsselnamen. Sie dienen dazu, Daten zu einer Einheit zusammenzufassen. Beispiel:
   ( TYPE &quot;textbox&quot; LABEL &quot;Name&quot; )
   ( TYPE &quot;textbox&quot; LABEL &quot;Vorname&quot; )
   ( TYPE &quot;textbox&quot; LABEL &quot;Titel&quot; )

==== Listen ====
Listen sind Aufzählungen von Werten in runden Klammern. Sie können benannt sein (durch einen Schlüssel vor den Klammern) oder unbenannt bleiben. Beispiel:
 Anredevarianten( &quot;Herr&quot;, &quot;Frau&quot;, &quot;Pinguin&quot;)
 ( &quot;Dies&quot;, &quot;ist&quot;, &quot;eine&quot;, &quot;unbenannte&quot;, &quot;Liste&quot; )

==== Kommentare ====
Kommentare werden eingeleitet durch den Lattenzaun '#' und erstrecken sich bis ans Ende der Zeile. Beispiel:
 # Dies ist ein Beispiel für die Verwendung von Kommentaren
 
 NAME &quot;WollMux&quot;  # Dies setzt den Namen unserer Applikation auf &quot;WollMux&quot;
 
 # An Halloween bitte Kommentarzeichen am Anfang der folgenden Zeile entfernen
 # FARBSCHEMA &quot;EkelGrün&quot;  

==== Whitespace ====
* Whitespace-Zeichen (Leerzeichen, Tabulator, Zeilenumbruch) werden außerhalb von Strings überall ignoriert, z.B. ist
 NAME &quot;WollMux&quot;
das selbe wie
 NAME
 &quot;WollMux&quot;
* Das Komma ',' und der Strichpunkt ';' werden außerhalb von Strings überall genau so behandelt wie Whitespace, z.B. ist
 NAME,,,,,;;;;;;;&quot;WollMux&quot;
das selbe wie
 NAME &quot;WollMux&quot;
* Insbesondere dient die Verwendung von Kommata in Wert-Listen nur der besseren Lesbarkeit.

==== Steuerbefehle ====
In WollMux-Config-Dateien können Steuerbefehle enthalten sein, die nicht Teil der Konfigurationsdaten sind, sondern das Einlesen der Config-Datei selbst steuern. Steuerbefehle beginnen mit einem Prozentzeichen '%'. Zur Zeit gibt es nur den Steuerbefehl &quot;%include&quot; (siehe [[Format_von_WollMux-Config-Dateien#.25include|weiter unten]]).

=== Steuerbefehle ===
==== %include ====
Es ist oft sinnvoll, Konfigurationsdaten auf mehrere Dateien zu verteilen und diese evtl. sogar an verschiedenen Orten zu speichern. Ein typischer Anwendungsfall wäre die Aufteilung in referatsweite Konfigurationsdaten, die auf einem zentralen Netzlaufwerk abgelegt sind und benutzerspezifische Konfigurationsdaten, die auf dem Benutzerlaufwerk abgelegt sind.
Der WollMux unterstützt dies mit einem include-Mechanismus. 

===== Syntax =====
Der %include-Steuerbefehl wird gefolgt von einem String. Dieser String wird als eine URL interpretiert und der Inhalt der durch diese URL bestimmten Datei an der Stelle des %include-Steuerbefehls in die Konfigurationsdaten eingefügt. Zu beachten ist dabei, dass es ''nicht'' erlaubt ist, zusammengehörige syntaktische Elemente über mehrere Dateien zu verteilen. Folgendes ist zum Beispiel ''nicht'' möglich:
 # FEHLER! Schlüssel-Wert-Paar darf nicht auf mehrere Dateien verteilt werden
 SCHLUESSEL %include &quot;wert.txt&quot;  
 
 # FEHLER! Zu Verschachtelung gehörige schließende Klammer darf nicht in anderer Datei stehen
 SCHLUESSEL(
   ...
 %include &quot;klammer_zu.txt&quot;

Es ist jedoch z.B. erlaubt, Inhalte von Verschachtelungen über %include einzufügen. Die generelle Regel ist
# Eine Config-Datei muss auch nach Entfernen aller %include Steuerbefehle (und der dazugehörigen URL-Strings) noch korrekt gemäß der [[Format_von_WollMux-Config-Dateien#Syntax|oben beschriebenen Syntax]] sein.
# Eine via %include eingefügte Datei muss selbst eine syntaktisch korrekte Config-Datei sein.

===== URLs =====
Der %include-Befehl erlaubt alle Arten von URLs, sowohl relativ als auch absolut. Unterstützt werden verschiedene Protokolle, insbesondere &quot;file:&quot; und &quot;http:&quot;. Der Kontext für relative URLs ist die URL der Datei, die den %include-Befehl enthält. Das bedeutet, dass unvollständige Pfadangaben relativ zum Verzeichnis dieser Datei aufgelöst werden. Die genaue Spezifikation der URL-Syntax ist zu finden in [http://www.ietf.org/rfc/rfc2396.txt RFC 2396]. Da das Includen von Dateien aus dem Dateisystem sicher den wichtigsten Anwendungsfall darstellt und dabei auch häufig Fehler gemacht werden, sind im folgenden einige Beispiele für korrekte und inkorrekte &quot;file:&quot; URLs.
* %include &lt;nowiki&gt;&quot;file://localhost/C:/includes/include.conf&quot;&lt;/nowiki&gt;
*:KORREKT! Vollständige URL unter Angabe des Pseudo-Rechnernamens &quot;//localhost&quot;

* %include &lt;nowiki&gt;&quot;file:///C:/includes/include.conf&quot;&lt;/nowiki&gt; 
*:KORREKT! Rechnername &quot;//&quot; bedeutet das selbe wie &quot;//localhost&quot;

* %include &lt;nowiki&gt;&quot;file:/C:/includes/include.conf&quot;&lt;/nowiki&gt; 
*:KORREKT! Rechnername kann ganz weggelassen werden. Achtung! 2 Slashes &quot;//&quot; fallen dann auch weg, weil sie zum Rechnernamen gehören. Ein Slash bleibt, da absolute Pfade immer mit einem Slash beginnen.

* %include &lt;nowiki&gt;&quot;file://C:/includes/include.conf&quot;&lt;/nowiki&gt; 
*:FEHLER! Ein '/' zu wenig. &quot;//C&quot; würde als Angabe des Rechnernamens interpretiert. Dieser Fehler wird häufig gemacht, weil wir es von HTTP-URLs gewöhnt sind, die beiden Slashes zu tippen. Sie gehören jedoch ''nicht'' zum Protokollspezifizierer dazu, sondern leiten den Rechnernamen ein.

* %include &quot;/C:/includes/include.conf&quot; 
*:KORREKT! Wenn der folgende %include über das Datei-System gelesen wird, dann folgt das &quot;file:&quot; Protokoll aus dem Kontext und kann weggelassen werden.

* %include &quot;C:/includes/include.conf&quot; 
*:FEHLER! Absoluter Pfad muss mit '/' beginnen (auch unter Windows!)

* %include &quot;include.conf&quot; 
*:KORREKT! Unvollständiger Pfad wird im Kontext der includenden Datei interpretiert. Die Datei &quot;include.conf&quot; wird also aus dem selben Verzeichnis gelesen wie die Datei, die den %include-Befehl enthält.

* %include &lt;nowiki&gt;&quot;file:include.conf&quot;&lt;/nowiki&gt; 
*:KORREKT! Auch bei relativen Pfaden ist die Angabe des Protokolls erlaubt.

* %include &lt;nowiki&gt;&quot;file://include.conf&quot;&lt;/nowiki&gt; 
*:FEHLER! Wie oben schon erwähnt leitet '//' den Rechnernamen ein, hat hier also nichts zu suchen (außer, wir würden tatsächlich auf den Rechner &quot;include.conf&quot; zugreifen wollen).

* %include &quot;../../include.conf&quot; 
*:KORREKT! Relative Pfadangaben können mit &quot;..&quot; auf höhere Verzeichnisebenen zugreifen. Ausgangspunkt ist dabei wie immer das Verzeichnis in dem sich die Datei befindet, die den %include-Befehl enthält.

* %include &lt;nowiki&gt;&quot;file:../../include.conf&quot;&lt;/nowiki&gt; 
*:KORREKT! Auch hier ist das Protokoll erlaubt. Man beachte, dass es NICHT  &lt;nowiki&gt;&quot;file://..&quot;&lt;/nowiki&gt; lautet!




[[Category:AG-Office]]
[[Category:Eierlegender_WollMux]]
[[Category:Handbuch_des_WollMux]]
[[Kategorie:Office_Admin_Handbuch]]</rev></revisions></page></pages></query></api>